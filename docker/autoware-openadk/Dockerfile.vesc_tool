# Based on https://gist.github.com/takurx/941c80fce4619f65120b936dd719d0d7
# NOTE: does not work on ARM devices. Must be run on an x64 or x86_64 PC
# Todo: fix jetson qt make issues. Try compiling QT from source. See (https://forums.developer.nvidia.com/t/pyside2-qt-for-python-installation-on-jetson-xavier/160796/7 | https://forums.developer.nvidia.com/t/jetson-nano-and-qt5/76870/2 | https://forums.developer.nvidia.com/t/pyqt-not-working-on-nano/145315/4 | https://forums.developer.nvidia.com/t/qt-creator-gcc-not-compiling/201041)
FROM ubuntu:jammy


# todo: set debian non-interactive because some steps require location/timezone to be set

# setup timezone
RUN echo 'Etc/UTC' > /etc/timezone && \
    ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \
    apt-get update && \
    apt-get install -q -y --no-install-recommends tzdata && \
    rm -rf /var/lib/apt/lists/*

RUN apt update && apt install -y sudo && sudo apt -y upgrade

RUN sudo apt-get update -y && DEBIAN_FRONTEND="noninteractive" sudo apt-get install -y --no-install-recommends \
    software-properties-common wget git-gui git libudev-dev openocd python3-pip python3-dev python-dev-is-python3 \
    mesa-common-dev libgl1-mesa-dev libglu1-mesa-dev libgles2-mesa-dev \
    qtquickcontrols2-5-dev qtpositioning5-dev qtconnectivity5-dev qml-module-qt-labs-folderlistmodel \
    qml-module-qtquick-extras qml-module-qtquick-controls2 libqt5quickcontrols2-5 qtquickcontrols2-5-dev qtcreator \
    qtcreator-doc libqt5serialport5-dev build-essential qml-module-qt3d qt3d5-dev qtdeclarative5-dev \
    qtbase5-dev qttools5-dev-tools qtquickcontrols2-5-dev qtbase5-dev-tools libqt5serialport5-dev \
    libqt5bluetooth5 qtpositioning5-dev libqt5gamepad5-dev qtconnectivity5-dev libqt5svg5-dev \
    libgl-dev libglu-dev qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools openocd libgl-dev libxcb-xinerama0 && \
    sudo rm -rf /var/lib/apt/lists/*


RUN cd / && wget https://developer.arm.com/-/media/Files/downloads/gnu-rm/7-2018q2/gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz2 \
    && tar xvf gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz2 \
    && cp -RT gcc-arm-none-eabi-7-2018-q2-update /usr/local \
    && rm gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz2

ENV PATH=$PATH:/usr/local/gcc-arm-none-eabi-7-2018-q2-update/bin

RUN git clone https://github.com/vedderb/vesc_tool && git clone https://github.com/vedderb/bldc.git

# (optional) Build BLDC firmware
RUN cd bldc && git checkout origin/master && make arm_sdk_install && \
    tar -xvjf downloads/gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz2
#    mv gcc-arm-none-eabi-7-2018-q2-update/ tools/ && \
#    cp -RT gcc-arm-none-eabi-7-2018-q2-update/ /usr/local && \

ENV PATH=$PATH:/bldc/gcc-arm-none-eabi-7-2018-q2-update/bin

RUN cd /bldc && make 60 60_75 60_75_mk2 60_75_mk2_no_limits 60_75_no_limits 60_mk3 60_mk3_no_limits 60_mk4 60_mk4_no_limits 60_mk5 60_mk5_no_limits 60_mk6 60_mk6_hp 60_mk6_hp_no_limits 60_mk6_max 60_mk6_no_limits 60_no_limits && \
    pip3 install aqtinstall && make qt_install

# https://github.com/vedderb/vesc_tool/issues/285
RUN cd /bldc  && python3 package_firmware.py

# Build VESC_tool. Takes about 3 minutes 30 seconds on Jetson Orin Nano
RUN cd vesc_tool && git checkout a214be8b5e3d7c54ddcdf53601c5b88aa71c7d07 && \
    time ./build_lin_original_only

## Setup UDEV rules (on host)
RUN wget vedder.se/Temp/49-stlinkv2.rules && \
    sudo mv 49-stlinkv2.rules /etc/udev/rules.d/ && \
    sudo udevadm trigger

# sudo add-apt-repository ppa:team-gcc-arm-embedded/ppa
# sudo apt install  qt-sdk qt5-default

## Usage For Vesc Tool 3.0
# cd /vesc_tool && ./build/lin/vesc_tool_3.00

## For VESC 6
# Build the firmwares on an x86 computer and copy to Jetson
# cd vesc_tool && git checkout master && ./build_lin_original_only
